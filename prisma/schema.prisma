generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  login     String   @unique
  password  String
  active    Boolean  @default(true)
  profileId Int?
  createdAt DateTime @default(now())

  locationId Int?

  profile         Profile?  @relation(fields: [profileId], references: [id])
  location        Location? @relation(fields: [locationId], references: [id])
  teacherClass    Class[]   @relation("teacher")
  enrolledClasses Class[]   @relation("User")
}

model Class {
  id Int @id @default(autoincrement())

  instrumentId Int
  userId       Int
  teacherId    Int

  week  String
  start String
  end   String

  instrument Instrument @relation(fields: [instrumentId], references: [id])
  user       User       @relation("User", fields: [userId], references: [id])
  teacher    User       @relation("teacher", fields: [teacherId], references: [id])
}

model Profile {
  id   Int    @id @default(autoincrement())
  name String
  user User[]
}

model Location {
  id        Int      @id @default(autoincrement())
  name      String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  User      User[]
}

model Instrument {
  id        Int      @id @default(autoincrement())
  name      String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Class     Class[]
}

model Music {
  id     Int    @id @default(autoincrement())
  name   String
  artist String
  link   String

  music String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  noteMusic NoteMusic[]
}

model Note {
  id        Int         @id @default(autoincrement())
  name      String
  noteMusic NoteMusic[]
}

model NoteMusic {
  id      Int   @id @default(autoincrement())
  noteId  Int
  musicId Int
  note    Note  @relation(fields: [noteId], references: [id])
  music   Music @relation(fields: [musicId], references: [id])

  @@unique([noteId, musicId])
}
